{"version":3,"file":"records.js","sourceRoot":"","sources":["../../../src/server/middlewares/records.ts"],"names":[],"mappings":"AAAA;;GAEG;AAKH,MAAM,UAAU,OAAO,CAAC,SAAiB;IACvC,MAAM,QAAQ,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;IACzC,OAAO,KAAK,EAAE,GAAY,EAAE,IAAwB,EAAE,EAAE;QACtD,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE;YACpC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;YAC9B,MAAM,IAAI,EAAE,CAAC;SACd;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE;YAC3C,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAY,CAAC;YAClC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YAC1C,MAAM,IAAI,EAAE,CAAC;SACd;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,qBAAqB,EAAE;YAC7C,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAY,CAAC;YAClC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;YAC5C,MAAM,IAAI,EAAE,CAAC;SACd;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE;YAC3C,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAY,CAAC;YAClC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YAC1C,MAAM,IAAI,EAAE,CAAC;SACd;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,wBAAwB,EAAE;YAChD,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAY,CAAC;YAClC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;YAC9C,MAAM,IAAI,EAAE,CAAC;SACd;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,wBAAwB,EAAE;YAChD,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAY,CAAC;YAClC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;YAClD,MAAM,IAAI,EAAE,CAAC;SACd;aAAM,IAAI,GAAG,CAAC,IAAI,KAAK,iBAAiB,EAAE;YACzC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;YAClC,MAAM,IAAI,EAAE,CAAC;SACd;aAAM;YACL,MAAM,IAAI,EAAE,CAAC;SACd;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/**\n * record middleware.\n */\n\nimport { Context, Middleware } from 'koa';\nimport { Server } from '../index.js';\n\nexport function records(devServer: Server): Middleware {\n  const compiler = devServer.getCompiler();\n  return async (ctx: Context, next: () => Promise<any>) => {\n    if (ctx.path === '/__record/modules') {\n      ctx.body = compiler.modules();\n      await next();\n    } else if (ctx.path === '/__record/resolve') {\n      const id = ctx.query.id as string;\n      ctx.body = compiler.getResolveRecords(id);\n      await next();\n    } else if (ctx.path === '/__record/transform') {\n      const id = ctx.query.id as string;\n      ctx.body = compiler.getTransformRecords(id);\n      await next();\n    } else if (ctx.path === '/__record/process') {\n      const id = ctx.query.id as string;\n      ctx.body = compiler.getProcessRecords(id);\n      await next();\n    } else if (ctx.path === '/__record/analyze_deps') {\n      const id = ctx.query.id as string;\n      ctx.body = compiler.getAnalyzeDepsRecords(id);\n      await next();\n    } else if (ctx.path === '/__record/resource_pot') {\n      const id = ctx.query.id as string;\n      ctx.body = compiler.getResourcePotRecordsById(id);\n      await next();\n    } else if (ctx.path === '/__record/stats') {\n      ctx.body = compiler.pluginStats();\n      await next();\n    } else {\n      await next();\n    }\n  };\n}\n"]}